ENVIRONMENT=DEV

################################################################################

# 環境変数および詳細情報

################################################################################

# docker #

## image ##

# build setted Base Local
DOCKER_IMAGE_REPOSITORY="react-app"
DOCKER_IMAGE_ID="68e882f9caeb"
DOCKER_IMAGE_TAG="latest"
DOCKER_IMAGE_URL="${DOCKER_IMAGE_REPOSITORY}:${DOCKER_IMAGE_TAG}"

# github action "docker login" command Using  create: "$ /usr/local/bin/docker-credential-gh"
DOCKER_USE_CREDENTIAL_EXECUTIVE="true"

# docker engine Using to Registry Credentials edit: ~/.docker/config.json
DOCKER_USE_CREDENTIAL_REGISTRY="true"

################################################################################

# Github #

## Environment ##

# option Using

GIT_ENVIRONMENT_DEV_NAME="develop"

GIT_ENVIRONMENT_PRODCTION_NAME="production"

## TOKEN ##

# Github push
GIT_TOKEN_REPO="true"
# Github Action Using
GIT_TOKEN_WORKFLOW="true"
# Docker Image push Using
GIT_TOKEN_WRITE_PACKAGE="true"
# Docker Image push Using
GIT_TOKEN_DELETE_PACKAGE="true"

## REPO SETTING ##

GIT_REPO_SETTING_SECRETS_KEY_APP="REACT_APP"           #GITHUB_TOKEN

## GITHUB ACTIONS ##

# build setted for Release   # workflow: [ghcr.io]
GIT_REGISTRY_URL="ghcr.io"
GIT_ACCOUNT_LOGIN_NAME="***"                           #github name

DOCKER_COMPOSE_YAL_FILE_GCR="docker-compose-GCR.yml"

DOCKER_PUSH_REPOSITORY="battle-vision"
DOCKER_PUSH_IMAGE="$DOCKER_IMAGE_REPOSITORY"
DOCKER_PUSH_TAG="$DOCKER_IMAGE_TAG"

# https://$DOCKER_PUSH_URL
DOCKER_PUSH_URL="$GIT_REGISTRY_URL/$GIT_ACCOUNT_LOGIN_NAME/$DOCKER_PUSH_REPOSITORY/$DOCKER_PUSH_IMAGE:$DOCKER_PUSH_TAG"
GUTHUB_DOCKER_PUSH_IMAGE_LINK="true"

################################################################################

# GCP PROJECT
REPO_PROJECT_ID="app-battle-vision"

# GCP SERVICE Account
GOOGLE_SERVICE_ACCOUNT="app-battle-vision-service"
GOOGLE_SERVICE_EMAIL="app-battle-vision-service-972@app-battle-vision.iam.gserviceaccount.com"
GOOGLE_SERVICE_CREDENTIALS="app-battle-vision-c819144b57be.json"

# GCP login # workflow [google-github-actions/auth]
GOOGLE_SERVICE_ACCOUNT_LOGIN_ROLE="true"

#! GITHUB REPO SETTING #
GIT_REPO_SETTING_SECRETS_KEY_GCS="***"   # "GCS"

# GCP Artifact Registry Repository  # workflow: [Artifact Registry]
DOCKER_COMPOSE_YAL_FILE_AR="docker-compose-AR.yml"

ARTIFACT_API="true"
ARTIFACT_ROLE_WRITE="true"

ARTIFACT_REPO_NAME="app-battle-vision-ar"
ARTIFACT_REPO_LOCATION="us-central1"

ARTIFACT_REPO_LOCATION_URL="${ARTIFACT_REPO_LOCATION}-docker.pkg.dev"
ARTIFACT_REPO_URL="${ARTIFACT_REPO_LOCATION_URL}/${REPO_PROJECT_ID}/${ARTIFACT_REPO_NAME}/${DOCKER_PUSH_IMAGE}:${DOCKER_PUSH_TAG}"
ARTIFACT_REPO_PUSH_IS="true"

################################################################################

# ARTIFACT_USE_ACCOUNT 
# Docker , 
#

DEPLOY_SERVICE_YRL="deployment-service.yml"
DEPLOY_SERVICE_TEST_YRL="deployment-service-docker.yml"

################################################################################

# GCP CLUSTER
CLUSTER_NAME="$DOCKER_IMAGE_REPOSITORY"
CLUSTER_REGION="$ARTIFACT_REPO_LOCATION"

DEPLOYMENT_NAME="$DOCKER_IMAGE_REPOSITORY"
# GCP POD
POD_DEFAULT=3

# CPUに合わせてPOD数を設定
POD_MAXCPU=80
POD_MAX=5
POD_MIN=1

# Kubernetes
DEPLOY_SERVICE_NAME="$DOCKER_IMAGE_REPOSITORY"

# GCP VM instance
VM_INSTANCE_NAME="instance"
VM_INSTANCE_PROJECT="$REPO_PROJECT_ID"
VM_INSTANCE_ID="6644452875492801361"
VM_INSTANCE_ZONE="us-central1-a"

VM_SSH_PASSWORD="test"
VM_SSH_TOKEN="SHA256:0NUqVjD4H5KV5EAhUp0LWqEZHQ2mY06YiHCzt0RhuEI"

VM_SSH_access_token="ya29.c.b0Aaekm1J-mZOgX6lvcFc60TRQy2prZoIhwIZ9xwwQXFdq-edU5KKy3P5A2K7nmjG1aJXHJpgVDrYZzxDtboLkUfTfBU0rxFRi4aMM6mHHIpa2UkB79wTPdfKx9M_ra1Q2yNiX5ptZ9SmRURa61ehOQMSp9qPJAC08p_srv8H4MpHrHggW_tyjUeRjlLmHQB_k7_ljiANF75vZTyWjyPPCcT7okr-AfhKwQQRWZ9-qTgIKHLCQqUrbq3-NH4pA5i964Bh4NmaK7_4z8ehEComb93ynPjm4z2qXYyb7zgqk09__vQuKgB74btSimc0DPeB0T329A9WpS68Qa0soIhI3d4vrnifQge36uI-1iopepd_c_0iy23IiZa3g0_oqZ1-p8e93jedtlFp0cwwVwb2mtFfY9MZscjcc--YbB1t4mevZF1OJu_3mxIzrd2bR1Sv3rldVzid0noi-zcot8_tqbxqy9IqdQeepssX1zsozUIsBbRzjeFMqQw7awcWV_MpUbbFMv4M5f411-MyB_FndnmOIe1IB6u5mZolWoWeZ2t89esRxbd7jW7ocWb2_7jVjywvoveuVz7mI3RBBMlidp7qQ_4khwh4rXR4a35jW-Uzv9_i3xFsj3-2UXoh_Q-Z8wiRWuQwmo22BJ1_4zBZ-ZQyXrh9iienmvnlracBuvgtkS6y7IWtSWRsvyxW2B42o8xmY-hYgIoh-Wx8FvcSyMp8M9o7V8lF45MO19g3-FQrMkRpkoZS01iFy3zjn93vVZOj2cox73B_qO9qersm2Wfeuo9qn4tiJ3a4RxU9JF1JflMiIyUbWSZrdQubwVb-l5F9Z-tfbhV4smMjaRufy1mvFOqFjRla7wjIrsWvZBvRu39MX9BlMzd7kZ7J94h-UmwbpkVBUonugrMUzixj8j2ncR5w7Zew_vf5cq8jVz8o8dybXzi8XMza_w10Rbm0gwl_gQ4-in9S4kSajjifyd1bjreUoWt3OnQbiygkUoR1mS-he-Ix4Ynm"

################################################################################

# Other option

################################################################################

# Docker hub push

DOCKER_ACCOUNT_NAME="****"
DOCKER_HUB_REPO_NAME="$DOCKER_IMAGE_REPOSITORY"
DOCKER_HUB_REPO_TAG="$DOCKER_IMAGE_TAG"

DOCKER_HUB_REPO_CONTAINER_ID="****"
DOCKER_HUB_REPO_URL="${DOCKER_ACCOUNT_NAME}/${DOCKER_HUB_REPO_NAME}:${DOCKER_HUB_REPO_TAG}"

GITHUB_TOKEN="***"

################################################################################

# minikube

GCP_ARTIFACT_REGISTRY_CONNECT_VERSION="2.1.8"
GCP_ARTIFACT_REGISTRY_CONNECT_OS="linux"
GCP_ARTIFACT_REGISTRY_CONNECT_ARCH="amd64"

GOOGLE_APPLICATION_CREDENTIALS="${HOME}/battle-vision/app-battle-vision-d90ae73ecada.json"

###############################################################################

# private Registry access

# kubectl create secret generic #推奨 regcred
KUBECTL_SECRET_NAME="reg"

# deployment.yml

DOCKER_ACCOUNT_SERVER="$ARTIFACT_REPO_LOCATION_URL"
DOCKER_ACCOUNT_NAME="$DOCKER_ACCOUNT_NAME"
DOCKER_ACCOUNT_PASSWORD="****"
DOCKER_ACCOUNT_EMAIL="****"