name: Build and Push Docker Compose
on:
  push:
    branches:
      - none
    tags:
      - 'v*'
  pull_request:
    branches: none
  workflow_dispatch:

jobs:
  docker-build:
    runs-on: ubuntu-22.04
    container:
      image: node:18.15.0-alpine3.16

    steps:
    - name: Github checkout OK
      uses: actions/checkout@v3

    - name: Generate tags test
      uses: docker/metadata-action@v4
      id: meta
      with:
        images: battle-vision/react-app

    - name: Setup Docker
      run: |
        sudo apt-get update
        sudo apt-get -y install docker.io
    
    - name: Setup Docker Buildx (Use docker "build") OK
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker Build Cache test
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: docker-build-cache-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          docker-build-cache-${{ github.ref }}
          docker-build-cache-${{ github.ref }}-${{ github.sha }}
          docker-build-cache

    - name: Ubuntu file ls OK
      run: |
        ls -a

    - name: Ubuntu file owner OK
      run: |
        ls -al

    - name: npm version OK
      run: |
        npm -v

    - name: npx version OK
      run: |
        npx -v

    - name: node version OK
      run: |
        node -v

    - name: yarn version OK
      run: |
        yarn --version

    - name: docker version test
      run: |
        docker -v
    
    - name: docker-compose version test
      run: |
        docker-compose -v

    - name: Login to GitHub Container Registry test
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.REACT_APP }}

    - name: React intall OK
      run: |
        yarn install

    - name: Docker Build and Push -> image test
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        provenance: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}