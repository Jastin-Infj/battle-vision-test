name: docker-build_and_push-AF (called workflow)
run-name: ${{ github.actor }} ${{ github.ref }}-${{ github.sha }}
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  AF-build-push:
    runs-on: ubuntu-22.04
    environment: production

    steps:
    - 
      name: Github checkout OK
      uses: actions/checkout@v3
    
    - name: Get Docker push tag OK
      id: get_docker_image_tag
      run: |
        echo  "ARTIFACT_REPO_URL=${{ vars.ARTIFACT_REPO_LOCATION }}-docker.pkg.dev/${{ vars.REPO_PROJECT_ID }}/${{ vars.ARTIFACT_REPO_NAME }}/${{ vars.DOCKER_PUSH_IMAGE }}:${{ vars.DOCKER_PUSH_TAG }}" >> $GITHUB_OUTPUT

    - name: Setup Google Cloud OK
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GCS }}
        project_id: ${{ vars.REPO_PROJECT_ID }}
    
    - name: Google Cloud version OK
      run: |
        gcloud version

    - 
      name: Setup Docker Buildx (Use docker "build") OK
      id: buildx
      uses: docker/setup-buildx-action@v2

    - 
      name: Cache Docker Build Cache OK
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: docker-build-cache-${{ github.ref }}-${{ github.sha }}
        restore-keys: |
          docker-build-cache-${{ github.ref }}
          docker-build-cache-${{ github.ref }}-${{ github.sha }}
          docker-build-cache

    - 
      name: yarn intall Using React OK
      run: |
        yarn install

    - 
      name: Ubuntu file ls OK
      run: |
        ls -a

    - 
      name: Ubuntu file owner OK
      run: |
        ls -al

    -
      name: docker version OK
      run: |
        docker --version

    - 
      name: npm version OK
      run: |
        npm -v

    - 
      name: npx version OK
      run: |
        npx -v

    - 
      name: node version OK
      run: |
        node -v

    - 
      name: yarn version OK
      run: |
        yarn --version
    
    - 
      name: auth token to Google Cloud OK
      id: auth
      uses: google-github-actions/auth@v1
      with:
        token_format: access_token
        credentials_json: ${{ secrets.GCS }}
        service_account: ${{ secrets.GOOGLE_SERVICE_EMAIL }}

    -
      name: docker login OK
      uses: docker/login-action@v2
      with:
        registry: ${{ vars.ARTIFACT_REPO_LOCATION }}-docker.pkg.dev
        username: oauth2accesstoken
        password: ${{ steps.auth.outputs.access_token }}

    -
      name: docker login connetion to Artifact Registry OK
      run: |
        echo ${{ steps.auth.outputs.access_token }} | docker login -u oauth2accesstoken --password-stdin https://${{ vars.ARTIFACT_REPO_LOCATION }}-docker.pkg.dev

    -
      name: docker image build OK
      run: |
        docker build -t ${{ steps.get_docker_image_tag.outputs.ARTIFACT_REPO_URL }} .
    
    -
      name: gcloud Artifacts Registry push OK
      run: |
        docker push ${{ steps.get_docker_image_tag.outputs.ARTIFACT_REPO_URL }}